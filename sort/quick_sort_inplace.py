def quick_sort_inplace(arr, low=0, high=None):
    """
    Быстрая сортировка (сортировка Хоара) на месте.
    
    Параметры:
        arr (list): Сортируемый массив.
        low (int): Начальный индекс подмассива (по умолчанию 0).
        high (int): Конечный индекс подмассива (по умолчанию None — длина массива - 1).
    """
    if high is None:
        high = len(arr) - 1
    
    # Рекурсивно сортируем, пока есть что сортировать
    if low < high:
        # Разделяем массив и получаем индекс опорного элемента
        pivot_index = partition(arr, low, high)
        
        # Рекурсивно сортируем левую и правую части
        quick_sort_inplace(arr, low, pivot_index - 1)
        quick_sort_inplace(arr, pivot_index + 1, high)

def partition(arr, low, high):
    """
    Функция разделения массива относительно опорного элемента.
    
    Параметры:
        arr (list): Массив для разделения.
        low (int): Начальный индекс подмассива.
        high (int): Конечный индекс подмассива.
        
    Возвращает:
        int: Индекс опорного элемента после разделения.
    """
    pivot = arr[high]  # Выбираем последний элемент как опорный
    i = low  # Индекс для элементов меньше опорного
    
    # Проходим по подмассиву и перемещаем элементы меньше опорного влево
    for j in range(low, high):
        if arr[j] < pivot:
            arr[i], arr[j] = arr[j], arr[i]  # Меняем местами
            i += 1
    
    # Помещаем опорный элемент на правильную позицию
    arr[i], arr[high] = arr[high], arr[i]
    return i  # Возвращаем индекс опорного элемента
