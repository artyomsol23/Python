def square_matrix_2_or_3_inverse(M):
    """
    Нахождение обратной матрицы методом алгебраических дополнений.
    Работает только для квадратных матриц размером 2×2 или 3×3.
    
    Параметры:
    ----------
    M : list of list of float
        Квадратная матрица (2×2 или 3×3), которую нужно обратить.
        
    Возвращает:
    -----------
    list of list of float
        Обратная матрица от M.
        
    Выбрасывает:
    ------------
    ValueError
        - Если матрица не квадратная.
        - Если матрица не 2×2 или 3×3.
        - Если матрица вырождена (определитель = 0).
    NotImplementedError
        Если передана матрица 3×3 (еще не реализовано).
    """
    
    # Проверка, что матрица квадратная
    n = len(M)
    if n != len(M[0]):
        raise ValueError("Матрица должна быть квадратной!")
    
    # Обработка матрицы 2×2
    if n == 2:
        # Вычисляем определитель
        det = M[0][0] * M[1][1] - M[0][1] * M[1][0]
        
        # Проверка на вырожденность
        if det == 0:
            raise ValueError("Матрица вырождена (определитель = 0)!")
        
        # Вычисляем обратный определитель
        inv_det = 1.0 / det
        
        # Возвращаем обратную матрицу по формуле
        return [
            [ M[1][1] * inv_det, -M[0][1] * inv_det],
            [-M[1][0] * inv_det,  M[0][0] * inv_det]
        ]
        
    # Обработка матрицы 3×3 (здесь не реализована)
    elif n == 3:
        raise NotImplementedError("Обратная матрица 3×3 требует больше кода.")
        
    # Ошибка, если матрица другого размера
    else:
        raise ValueError("Функция поддерживает только матрицы 2×2 и 3×3.")
